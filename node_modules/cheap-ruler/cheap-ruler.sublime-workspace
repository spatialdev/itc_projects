{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"dist",
				"distances"
			],
			[
				"err",
				"errStr"
			],
			[
				"line",
				"lineDistance"
			],
			[
				"ruler",
				"ruler2"
			],
			[
				"run",
				"runBench"
			],
			[
				"pon",
				"points"
			],
			[
				"po",
				"pointOnLine"
			],
			[
				"min",
				"minI"
			],
			[
				"sq",
				"sqDist"
			],
			[
				"miles",
				"milesRuler"
			],
			[
				"bbox",
				"bboxBuffer"
			],
			[
				"dis",
				"distance"
			],
			[
				"_mete",
				"_metersPerPx"
			],
			[
				"_me",
				"_metersPerPx"
			],
			[
				"uint",
				"uint32_t"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"ids",
				"ids_size"
			],
			[
				"in",
				"include"
			],
			[
				"valid",
				"validArray"
			],
			[
				"raw",
				"rawRings"
			],
			[
				"rawC",
				"rawCoord"
			],
			[
				"read",
				"readCoordinate"
			],
			[
				"solid",
				"solidZ"
			],
			[
				"tile",
				"tileGeometry"
			],
			[
				"tileG",
				"tileGeometry"
			],
			[
				"Tile",
				"TilePoints"
			],
			[
				"Pro",
				"ProjectedPoints"
			],
			[
				"Project",
				"ProjectedFeature"
			],
			[
				"Projected",
				"ProjectedPoints"
			],
			[
				"Proje",
				"ProjectedRings"
			],
			[
				"ProjectedRin",
				"ProjectedRing"
			],
			[
				"Projec",
				"ProjectedPoints"
			],
			[
				"new",
				"newRing"
			],
			[
				"geom",
				"geometry"
			],
			[
				"Por",
				"ProjectedGeometryContainer"
			],
			[
				"tran",
				"transformPoint"
			],
			[
				"slice",
				"sliceLen"
			],
			[
				"sli",
				"sliceLen"
			],
			[
				"inte",
				"intersectX"
			],
			[
				"shif",
				"shiftCoords"
			],
			[
				"clip",
				"clipByDateLines"
			],
			[
				"pro",
				"prototype"
			],
			[
				"max",
				"maxPoints"
			],
			[
				"get",
				"getJSON"
			],
			[
				"newM",
				"newMin"
			],
			[
				"_upda",
				"_updateTransform"
			],
			[
				"_remove",
				"_removeAllTiles"
			],
			[
				"_reset",
				"_resetAll"
			],
			[
				"_update",
				"_updateTransform"
			],
			[
				"pane",
				"panePos"
			],
			[
				"fun",
				"function"
			]
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 5618,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-inside-bbox.js",
			"settings":
			{
				"buffer_size": 709,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-buffer-point.js",
			"settings":
			{
				"buffer_size": 804,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-bearing.js",
			"settings":
			{
				"buffer_size": 614,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-destination.js",
			"settings":
			{
				"buffer_size": 634,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-distance.js",
			"settings":
			{
				"buffer_size": 531,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 1091,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/test.js",
			"settings":
			{
				"buffer_size": 7513,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\nvar tilebelt = require('tilebelt');\n\nmodule.exports = Ruler;\n\nfunction Ruler(x, y, z, extent) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.extent = extent || 4096;\n\n    this._bbox = tilebelt.tileToBBOX([x, y, z]);\n\n    this._midLat = (this._bbox[1] + this._bbox[3]) / 2;\n    this._lngWidth = this._bbox[2] - this._bbox[0];\n\n    this._metersWidth = 40075161 * Math.cos(this._midLat * Math.PI / 180) * this._lngWidth / 360;\n    this._metersPerPx = this._metersWidth / this.extent;\n    this._metersPerPxSq = this._metersPerPx * this._metersPerPx;\n}\n\nRuler.prototype = {\n    bufferPoint: function (p, bufferMeters) {\n        var pad = bufferMeters / this._metersPerPx;\n        return [p[0] - pad, p[1] - pad, p[0] + pad, p[1] + pad];\n    },\n\n    distanceSq: function (a, b) {\n        var dx = a[0] - b[0];\n        var dy = a[1] - b[1];\n        return (dx * dx + dy * dy) * this._metersPerPxSq;\n    },\n\n    convertBBox: function (pxBBox) {\n        return\n    }\n};\n\n\n\n    sliceLineBeginning: function (points, dist) {\n        var total = 0;\n        var slice = [points[0]];\n\n        for (var i = 0; i < points.length - 1; i++) {\n            var p0 = points[i];\n            var p = points[i + 1];\n            var d = this.distance(p0, p);\n\n            total += d;\n\n            if (total >= dist) {\n                var t = (dist - (total - d)) / d;\n                var dx = p[0] - p0[0];\n                var dy = p[1] - p0[1];\n                slice.push([\n                    p0[0] + dx * t,\n                    p0[1] + dy * t\n                ]);\n                return slice;\n            }\n            slice.push(p);\n        }\n        return slice;\n    }\n\n'use strict';\n\nvar createRuler = require('./');\nvar turf = require('turf');\n\nvar poly = [[\n  [-67.031021, 50.458102],\n  [-67.031021, 50.53372],\n  [-66.929397, 50.53372],\n  [-66.929397, 50.458102],\n  [-67.031021, 50.458102]\n]];\n\nvar ruler = createRuler(50.5);\n\nconsole.log(ruler.area(poly));\n\n// // var line = [[-77.031669, 70.878605], [-77.029609, 70.885946]];\n// var line = [\n//     [-77.031669, 38.878605],\n//     [-77.029609, 38.881946]\n// ];\n// // var p0 = [-77.034076, 70.882017];\n// var p0 = [-77.034076, 38.881017];\n\n// var ruler = createRuler(p0[1]);\n\n// var p1 = ruler.pointOnLine(line, p0);\n// var p2 = turf.pointOnLine(turf.linestring(line), turf.point(p0));\n\n// var d1 = turf.distance(turf.point(p0), turf.point(p1));\n// var d2 = turf.distance(turf.point(p0), p2);\n\n// console.log('ruler dist ' + d1);\n// console.log('turf dist ' + d2);\n\n// console.log('err ' + (100 * Math.abs((d1 - d2) / d2)));\n",
			"settings":
			{
				"buffer_size": 2587,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.js",
			"settings":
			{
				"buffer_size": 6179,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\nmodule.exports = cheapRuler;\n\nfunction cheapRuler(lat, units) {\n    return new CheapRuler(lat, units);\n}\n\ncheapRuler.fromTile = function (y, z, units) {\n    var n = Math.PI * (1 - 2 * (y + 0.5) / Math.pow(2, z));\n    var lat = Math.atan(0.5 * (Math.exp(n) - Math.exp(-n))) * 180 / Math.PI;\n    return new CheapRuler(lat, units);\n};\n\nfunction CheapRuler(lat, units) {\n    if (lat === undefined) throw new Error('No latitude given.');\n\n    // units per degree on equator\n    this.d = (units === 'miles' ? 24901.55 : 40075.16) / 360;\n\n    // longitude correction based on latitude\n    this.e = Math.cos(lat * Math.PI / 180);\n}\n\nCheapRuler.prototype = {\n    distance: function (a, b) {\n        var dx = (a[0] - b[0]) * this.e;\n        var dy = a[1] - b[1];\n        return Math.sqrt(dx * dx + dy * dy) * this.d;\n    },\n\n    bearing: function (a, b) {\n        var dx = (b[0] - a[0]) * this.e;\n        var dy = b[1] - a[1];\n        if (!dx && !dy) return 0;\n        var bearing = Math.atan2(-dy, dx) * 180 / Math.PI + 90;\n        if (bearing > 180) bearing -= 360;\n        return bearing;\n    },\n\n    destination: function (p, dist, bearing) {\n        var a = (90 - bearing) * Math.PI / 180;\n        var d = dist / this.d;\n        return [\n            p[0] + d * Math.cos(a) / this.e,\n            p[1] + d * Math.sin(a)\n        ];\n    },\n\n    lineDistance: function (points) {\n        var total = 0;\n        for (var i = 0; i < points.length - 1; i++) {\n            total += this.distance(points[i], points[i + 1]);\n        }\n        return total;\n    },\n\n    area: function (polygon) {\n        var sum = 0;\n\n        for (var i = 0; i < polygon.length; i++) {\n            var ring = polygon[i];\n\n            for (var j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n                sum += (ring[j][0] - ring[k][0]) * (ring[j][1] + ring[k][1]) * (i ? -1 : 1);\n            }\n        }\n\n        return (Math.abs(sum) / 2) * this.e * this.d * this.d;\n    },\n\n    along: function (line, dist) {\n        var sum = 0;\n\n        if (dist <= 0) return line[0];\n\n        for (var i = 0; i < line.length - 1; i++) {\n            var p0 = line[i];\n            var p1 = line[i + 1];\n            var d = this.distance(p0, p1);\n            var t = (dist - (sum - d)) / d;\n            sum += d;\n            if (sum > dist) return interpolate(p0, p1, t);\n        }\n\n        return line[line.length - 1];\n    },\n\n    pointOnLine: function (line, p) {\n        var minDist = Infinity;\n        var minX, minY, minI, minT;\n\n        for (var i = 0; i < line.length - 1; i++) {\n\n            var x = line[i][0];\n            var y = line[i][1];\n            var dx = (line[i + 1][0] - x) * this.e;\n            var dy = line[i + 1][1] - y;\n\n            if (dx !== 0 || dy !== 0) {\n\n                var t = ((p[0] - x) * this.e * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = line[i + 1][0];\n                    y = line[i + 1][1];\n\n                } else if (t > 0) {\n                    x += dx * t / this.e;\n                    y += dy * t;\n                }\n            }\n\n            dx = (p[0] - x) * this.e;\n            dy = p[1] - y;\n\n            var sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n                minI = i;\n                minT = t;\n            }\n        }\n\n        return {\n            point: [minX, minY],\n            index: minI,\n            t: minT\n        };\n    },\n\n    lineSlice: function (start, stop, line) {\n        var p1 = this.pointOnLine(line, start);\n        var p2 = this.pointOnLine(line, stop);\n\n        if (p1.index > p2.index || (p1.index === p2.index && p1.t > p2.t)) {\n            var tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n        }\n\n        var slice = [p1.point];\n\n        var l = p1.index + 1;\n        var r = p2.index;\n\n        if (!equals(line[l], slice[0]) && l <= r)\n            slice.push(line[l]);\n\n        for (var i = l + 1; i <= r; i++) {\n            slice.push(line[i]);\n        }\n\n        if (!equals(line[r], p2.point))\n            slice.push(p2.point);\n\n        return slice;\n    },\n\n    lineSliceDistance: function (start, stop, line) {\n        var sum = 0;\n        var slice = [];\n\n        for (var i = 0; i < line.length - 1; i++) {\n            var p0 = line[i];\n            var p1 = line[i + 1];\n            var d = this.distance(p0, p1);\n\n            sum += d;\n\n            if (sum > start && !slice.length) {\n                slice.push(interpolate(p0, p1, (start - (sum - d)) / d));\n            }\n\n            if (sum >= stop) {\n                slice.push(interpolate(p0, p1, (stop - (sum - d)) / d));\n                return slice;\n            }\n\n            slice.push(p1);\n        }\n\n        return slice;\n    },\n\n    bufferPoint: function (p, buffer) {\n        var v = buffer / this.d;\n        var h = v / this.e;\n        return [\n            p[0] - h,\n            p[1] - v,\n            p[0] + h,\n            p[1] + v\n        ];\n    },\n\n    bufferBBox: function (bbox, buffer) {\n        var v = buffer / this.d;\n        var h = v / this.e;\n        return [\n            bbox[0] - h,\n            bbox[1] - v,\n            bbox[2] + h,\n            bbox[3] + v\n        ];\n    },\n\n    insideBBox: function (p, bbox) {\n        return p[0] >= bbox[0] &&\n               p[0] <= bbox[2] &&\n               p[1] >= bbox[1] &&\n               p[1] <= bbox[3];\n    }\n};\n\nfunction equals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n\nfunction interpolate(a, b, t) {\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return [\n        a[0] + dx * t,\n        a[1] + dy * t\n    ];\n}\n",
			"settings":
			{
				"buffer_size": 5707,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-along.js",
			"settings":
			{
				"buffer_size": 631,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-run.js",
			"settings":
			{
				"buffer_size": 565,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".travis.yml",
			"settings":
			{
				"buffer_size": 48,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 55,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".npmignore",
			"settings":
			{
				"buffer_size": 27,
				"line_ending": "Unix"
			}
		},
		{
			"file": "LICENSE",
			"settings":
			{
				"buffer_size": 725,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-area.js",
			"settings":
			{
				"buffer_size": 667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "debug.js",
			"settings":
			{
				"buffer_size": 1618,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-line-slice.js",
			"settings":
			{
				"buffer_size": 870,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-line-slice-along.js",
			"settings":
			{
				"buffer_size": 852,
				"line_ending": "Unix"
			}
		},
		{
			"file": "bench/bench-point-on-line.js",
			"settings":
			{
				"buffer_size": 574,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "    pointOnLine(line, p) {\n\n        var minDist = Infinity;\n        var minX, minY;\n\n        for (var i = 0; i < line.length - 1; i++) {\n\n            var p1 = line[i];\n            var p2 = line[i + 1];\n            var x = p1[0];\n            var y = p1[1];\n            var dx = (p2[0] - x) * this.e;\n            var dy = p2[1] - y;\n\n            if (dx !== 0 || dy !== 0) {\n\n                var t = ((p[0] - x) * this.e * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n                if (t > 1) {\n                    x = p2[0];\n                    y = p2[1];\n\n                } else if (t > 0) {\n                    x += dx * t / this.e;\n                    y += dy * t;\n                }\n            }\n\n            dx = (p[0] - x) * this.e;\n            dy = p[1] - y;\n\n            var sqDist = dx * dx + dy * dy;\n            if (sqDist < minDist) {\n                minDist = sqDist;\n                minX = x;\n                minY = y;\n            }\n        }\n\n        return [minX, minY];\n    }\n",
			"settings":
			{
				"buffer_size": 994,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 356.0,
		"last_filter": "previ",
		"selected_items":
		[
			[
				"previ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"jso",
				"Set Syntax: JSON"
			],
			[
				"spac",
				"Indentation: Convert to Spaces"
			],
			[
				"spa",
				"Indentation: Convert to Spaces"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 431.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mourner/projects/cheap-ruler",
		"/Users/mourner/projects/cheap-ruler/bench",
		"/Users/mourner/projects/cheap-ruler/test",
		"/Users/mourner/projects/cheap-ruler/test/fixtures"
	],
	"file_history":
	[
		"/Users/mourner/projects/cheap-ruler/fake-turf.js",
		"/Users/mourner/projects/kdbush.hpp/.clang-format",
		"/Users/mourner/projects/geojson-vt-cpp/geojson-vt-cpp.sublime-project",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/types.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/wrap.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/util.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/util.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/test_simplify.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/test_full.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/test_clip.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/geojsonvt.gyp",
		"/Users/mourner/projects/geojson-vt-cpp/debug/debug.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/clip.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/.gitignore",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/Makefile",
		"/Users/mourner/projects/geojson-vt-cpp/src/clip.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/convert.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/simplify.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/tile.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/convert.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/single-geom.json",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/single-geom-tiles.json",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/collection.json",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/transform.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/transform.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/collection-tiles.json",
		"/Users/mourner/projects/geojson-vt-cpp/src/simplify.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/tile.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/wrap.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/debug/bench.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/data/dateline.json",
		"/Users/mourner/Library/Preferences/com.apple.symbolichotkeys.plist",
		"/Users/mourner/projects/geojson-vt-cpp/test/test_get_tile.cpp",
		"/Users/mourner/.bash_profile",
		"/usr/local/etc/profile.d/z.sh",
		"/Users/mourner/.bash_pro",
		"/Users/mourner/projects/geojson-vt-cpp/.clang-format",
		"/usr/local/Library/Formula/llvm.rb",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt_convert.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt_convert.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt_tile.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt_simplify.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt_simplify.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/feature.json",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt_clip.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt_types.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/src/geojsonvt_wrap.cpp",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt_clip.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/test/fixtures/dateline.json",
		"/Users/mourner/projects/geojson-vt-cpp/include/mapbox/geojsonvt/geojsonvt_wrap.hpp",
		"/Users/mourner/projects/geojson-vt-cpp/deps/run_gyp",
		"/Users/mourner/projects/geojson-vt/test/fixtures/collection.json",
		"/Users/mourner/projects/geojson-vt/test/fixtures/empty.json",
		"/Users/mourner/projects/geojson-vt/package.json",
		"/Users/mourner/projects/geojson-vt/bench/bench-clip.js",
		"/Users/mourner/projects/geojson-vt/README.md",
		"/etc/hosts",
		"/Users/mourner/projects/geojson-vt/test/fixtures/us-states-z7-37-48.json",
		"/Users/mourner/projects/geojson-vt/src/convert.js",
		"/Users/mourner/projects/geojson-vt/src/simplify.js",
		"/Users/mourner/projects/geojson-vt/src/clip.js",
		"/Users/mourner/projects/geojson-vt/debug/viz.js",
		"/Users/mourner/projects/geojson-vt/test/gen-tiles.js",
		"/Users/mourner/projects/geojson-vt/test/test-full.js",
		"/Users/mourner/projects/geojson-vt/src/index.js",
		"/Users/mourner/projects/geojson-vt/debug/debug.js",
		"/Users/mourner/projects/geojson-vt/src/wrap.js",
		"/Users/mourner/projects/geojson-vt/debug/index.html",
		"/Users/mourner/projects/geojson-vt/src/tile.js",
		"/Users/mourner/projects/geojson-vt/.gitignore",
		"/Users/mourner/projects/geojson-vt/test/test-simplify.js",
		"/Users/mourner/projects/geojson-vt/test/test-clip.js",
		"/Users/mourner/projects/geojson-vt/.travis.yml",
		"/Users/mourner/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/mourner/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/mourner/projects/geojson-vt/src/transform.js",
		"/Users/mourner/projects/geojson-vt/LICENSE",
		"/Users/mourner/projects/Leaflet/CHANGELOG.md",
		"/usr/local/Library/Formula/node.rb",
		"/Users/mourner/projects/Leaflet/package.json",
		"/Users/mourner/projects/Leaflet/src/layer/tile/GridLayer.js",
		"/Users/mourner/projects/Leaflet/Leaflet.sublime-project",
		"/Users/mourner/projects/Leaflet/.eslintrc",
		"/Users/mourner/projects/Leaflet/src/layer/marker/Icon.js",
		"/Users/mourner/.inputrc",
		"/Users/mourner/.gitignore"
	],
	"find":
	{
		"height": 56.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n-",
			"3e-5",
			"milesRuler",
			"miles",
			" /*: number */",
			"String",
			"Number",
			"90",
			"1e-8",
			"2e-7",
			"this.e",
			"90",
			"lineSliceByDistance",
			"lineSliceDistance",
			"lines[i]",
			"line",
			"p",
			"end",
			"ruler.along(line, ",
			"p",
			"line[i + 1]",
			"line[i]",
			"along",
			"p0",
			"45",
			"cheapRuler",
			", f",
			"lines[i][j + 1]",
			"lines[i][j]",
			"~",
			"faster",
			" times",
			"test('bufferBBox', function (t) {\n    var bbox = [30, 38, 40, 39];\n    var bbox2 = ruler.bufferBBox(bbox, 1);\n    t.same(bbox2, [30, 38, 40, 39]);\n    t.end();\n});\n\n",
			"bearing",
			"start",
			"1e-6",
			"0.0001",
			"turf",
			"lines[i]",
			"lineDistance",
			"right",
			"left",
			"pointonline",
			"sqDist",
			"line[i + 1]",
			"line[i]",
			"0.001",
			"lineDistance",
			"sum",
			"faster",
			"10.",
			"10",
			"38",
			"50",
			" * this.e",
			"68.",
			"68",
			" * this.e",
			"78.",
			"8",
			"78",
			"this.e",
			"p2",
			"p1",
			"lineDistance",
			"[i]",
			"p2",
			"p1",
			".y",
			".x",
			"1e-8",
			"0.000000001",
			"01",
			"001",
			"0001",
			"0",
			"distance",
			"units",
			"ruler.",
			"radiusM",
			"d2m",
			"\"hsl",
			"size_t",
			"double",
			"std::size_t",
			"search_within",
			"uint32_t",
			"nodesize",
			"->",
			"count",
			"coord",
			"coord(i)",
			"coord(k)",
			"ids",
			"]",
			"[",
			"ids",
			"coords[2 * i + axis]",
			"t",
			"ids, coords, ",
			"inc",
			"ids, coords, nodeSize, ",
			"length",
			"projectedfeat",
			"rawCoordinatePairs",
			"rawLines",
			"rawPolygons",
			"rawCoordinatePairs",
			"auto",
			"rawCoordinatePairs",
			"CoordinatePairs",
			"coordinatePairs",
			"readCoordinate",
			"rawCoordinates",
			"Coordinates",
			"coordinates",
			"while ",
			"!parent",
			".source",
			"solidz",
			"splittile",
			"Clock",
			"static ",
			"// ",
			"DEBUG",
			"tile z",
			"stats",
			"steady_clock"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5618,
						"regions":
						{
						},
						"selection":
						[
							[
								2561,
								2561
							]
						],
						"settings":
						{
							"parser": "github",
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"target": "browser"
						},
						"translation.x": 0.0,
						"translation.y": 788.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "bench/bench-inside-bbox.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 709,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "bench/bench-buffer-point.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 804,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "bench/bench-bearing.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 614,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "bench/bench-destination.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 634,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "bench/bench-distance.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 531,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1091,
						"regions":
						{
						},
						"selection":
						[
							[
								414,
								414
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test/test.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7513,
						"regions":
						{
						},
						"selection":
						[
							[
								1273,
								1273
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 183.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2587,
						"regions":
						{
						},
						"selection":
						[
							[
								1678,
								1969
							]
						],
						"settings":
						{
							"default_dir": "/Users/mourner/projects/cheap-ruler",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 963.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6179,
						"regions":
						{
						},
						"selection":
						[
							[
								835,
								835
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5707,
						"regions":
						{
						},
						"selection":
						[
							[
								5707,
								5707
							]
						],
						"settings":
						{
							"default_dir": "/Users/mourner/projects/cheap-ruler",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3349.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "bench/bench-along.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 631,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "bench/bench-run.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 565,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": ".travis.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/YAML/YAML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								55
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": ".npmignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27,
						"regions":
						{
						},
						"selection":
						[
							[
								27,
								27
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "LICENSE",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 725,
						"regions":
						{
						},
						"selection":
						[
							[
								725,
								725
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "bench/bench-area.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 667,
						"regions":
						{
						},
						"selection":
						[
							[
								15,
								56
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "debug.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1618,
						"regions":
						{
						},
						"selection":
						[
							[
								1007,
								1008
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 127.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "bench/bench-line-slice.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 870,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								870
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "bench/bench-line-slice-along.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 852,
						"regions":
						{
						},
						"selection":
						[
							[
								682,
								682
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "bench/bench-point-on-line.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 574,
						"regions":
						{
						},
						"selection":
						[
							[
								574,
								574
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 22,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 994,
						"regions":
						{
						},
						"selection":
						[
							[
								994,
								994
							]
						],
						"settings":
						{
							"default_dir": "/Users/mourner/projects/cheap-ruler",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "cheap-ruler.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"in",
				"index.js"
			],
			[
				"inde",
				"index.js"
			],
			[
				"rea",
				"README.md"
			],
			[
				"de",
				"debug.js"
			],
			[
				"clip",
				"lib/clip-edges.js"
			],
			[
				"tes",
				"test/test_full.cpp"
			],
			[
				"cpp",
				"src/geojsonvt.cpp"
			],
			[
				"test",
				"test/test_full.cpp"
			],
			[
				"deb",
				"debug/debug.cpp"
			],
			[
				"typ",
				"include/mapbox/geojsonvt/geojsonvt_types.hpp"
			],
			[
				"make",
				"Makefile"
			],
			[
				"debug",
				"debug/debug.cpp"
			],
			[
				"run",
				"deps/run_gyp"
			],
			[
				"ci",
				"src/clip.js"
			],
			[
				"ind",
				"src/index.js"
			],
			[
				"viz",
				"debug/viz.js"
			],
			[
				"",
				"test/test-full.js"
			],
			[
				"vi",
				"debug/viz.js"
			],
			[
				"popu",
				"src/layer/Popup.js"
			],
			[
				"rend",
				"src/layer/vector/Renderer.js"
			],
			[
				"image",
				"src/layer/ImageOverlay.js"
			],
			[
				"path",
				"src/layer/vector/Path.js"
			],
			[
				"render",
				"src/layer/vector/Renderer.js"
			],
			[
				"marker",
				"src/layer/marker/Marker.js"
			],
			[
				"fl",
				"src/map/anim/Map.FlyTo.js"
			],
			[
				"grid",
				"src/layer/tile/GridLayer.js"
			],
			[
				"map",
				"src/map/Map.js"
			],
			[
				"polyli",
				"src/layer/vector/Polyline.js"
			],
			[
				"mapsp",
				"spec/suites/map/MapSpec.js"
			],
			[
				"popup",
				"src/layer/Popup.js"
			],
			[
				"crs",
				"src/geo/crs/CRS.js"
			],
			[
				"touch",
				"src/map/handler/Map.TouchZoom.js"
			],
			[
				"poly",
				"src/layer/vector/Polyline.js"
			],
			[
				"leafl",
				"dist/leaflet.css"
			],
			[
				"zoompa",
				"debug/map/zoompan.html"
			],
			[
				"map.dra",
				"src/map/handler/Map.Drag.js"
			],
			[
				"chan",
				"CHANGELOG.md"
			],
			[
				"domut",
				"src/dom/DomUtil.js"
			],
			[
				"scroll",
				"src/map/handler/Map.ScrollWheelZoom.js"
			],
			[
				"leaf",
				"dist/leaflet.css"
			],
			[
				"dom",
				"src/dom/DomUtil.js"
			],
			[
				"sv",
				"src/layer/vector/SVG.js"
			],
			[
				"re",
				"src/layer/vector/Renderer.js"
			],
			[
				"ren",
				"src/layer/vector/Renderer.js"
			],
			[
				"svg",
				"src/layer/vector/SVG.js"
			],
			[
				"even",
				"src/core/Events.js"
			],
			[
				"iamge",
				"src/layer/ImageOverlay.js"
			],
			[
				"icon",
				"src/layer/marker/Icon.js"
			],
			[
				"drag",
				"src/map/handler/Map.Drag.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"gl",
				"~/projects/mapbox-gl-js/mapbox-gl-js.sublime-project"
			],
			[
				"ear",
				"~/projects/earcut/earcut.sublime-project"
			],
			[
				"geo",
				"~/projects/geobuf/geobuf.sublime-project"
			],
			[
				"",
				"~/projects/rbush/rbush.sublime-project"
			],
			[
				"lea",
				"~/projects/Leaflet/Leaflet.sublime-project"
			],
			[
				"l",
				"~/projects/Leaflet/Leaflet.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 249.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
